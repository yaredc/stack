version: "3"
volumes:
  composer:
  npm:
  mysql:
  rabbitmq:
  elasticsearch:
services:
  php:
    image: app/php:1.0.0
    build:
      context: .
      dockerfile: .docker/dev/php.dockerfile
    restart: always
    volumes:
      - ./:/var/www
      - composer:/home/www-data/.composer
    working_dir: /var/www
    environment:
      XDEBUG_CONFIG: "remote_host=000.000.000.000 remote_enable=1 profiler_enable=0 profiler_output_dir=/var/www/profile"
      COMPOSER_MEMORY_LIMIT: "-1"
      COMPOSER_AUTH: '{"github-oauth":{"github.com":"ACCESS-TOKEN"}}'
  cron:
    depends_on:
      - php
    image: app/cron:1.0.0
    build:
      context: .
      dockerfile: .docker/dev/cron.dockerfile
    restart: always
    volumes:
      - ./:/var/www
    working_dir: /var/www
  node:
    image: app/node:1.0.0
    build:
      context: .
      dockerfile: .docker/dev/node.dockerfile
    volumes:
      - ./:/var/www
      - npm:/root/.npm
    working_dir: /var/www
  nginx:
    depends_on:
      - php
    image: app/nginx:1.0.0
    build:
      context: .
      dockerfile: .docker/dev/nginx.dockerfile
    restart: always
    volumes:
      - ./.docker/dev/conf.nginx:/etc/nginx/conf.d/conf.nginx
      - ./:/var/www
    working_dir: /var/www
    ports:
      - 80:80
      - 90:90
  mysql:
    depends_on:
      - php
    image: mysql:5.7.29
    ports:
      - 3306:3306
    restart: always
    volumes:
      - mysql:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: app
      MYSQL_USER: root
      MYSQL_PASSWORD: root
  rabbitmq:
    depends_on:
      - php
    image: rabbitmq:3.7.17-alpine
    volumes:
      - rabbitmq:/var/lib/rabbitmq
    ports:
      - 15672:15672
  elasticsearch:
    depends_on:
      - php
    image: docker.elastic.co/elasticsearch/elasticsearch:7.5.1
    volumes:
      - elasticsearch:/usr/share/elasticsearch/data
    environment:
      - discovery.type=single-node
    ports:
      - 9200:9200
  kibana:
    depends_on:
      - elasticsearch
    image: docker.elastic.co/kibana/kibana:7.5.1
    environment:
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
    ports:
      - 5601:5601
  logstash:
    depends_on:
      - kibana
    image: docker.elastic.co/logstash/logstash:7.5.1
    volumes:
      - .docker/dev/logstash/pipeline/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
    ports:
      - 9600:9600
      - 5044:5044
  filebeat:
    depends_on:
      - logstash
    image: docker.elastic.co/beats/filebeat:7.5.1
    volumes:
      - .docker/dev/filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml
      - ./data:/var/www/data
